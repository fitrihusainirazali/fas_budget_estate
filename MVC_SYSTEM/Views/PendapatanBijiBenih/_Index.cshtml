@model PagedList.PagedList<MVC_SYSTEM.ModelsBudget.ViewModels.IncomeBijiBenihListViewModel>
@using PagedList.Mvc
@using MVC_SYSTEM.ClassBudget;
@{
    int pageno = (int)ViewBag.pageno;
    int itemperpage = (int)ViewBag.itemperpage;//24
    int i = ((pageno - 1) * (itemperpage / 2)) + 1;
    int newitemperpage = itemperpage;//24
    bgtApproval bgtapproval = new bgtApproval();
    BudgetUserMatrix UserMatrix = new BudgetUserMatrix();//new oct
    var userid = User.Identity.Name;
    var RoleScreen = UserMatrix.RoleScreen(userid, "I2");
}
<link href="~/Content/PagedList.css" rel="stylesheet" />
<style>
    .pagination {
        margin: 0 !important;
    }
</style>
@if (Model != null && Model.Count() != 0)
{
    <table class="table table-bordered table-striped table-list table-hover" style="font-size: 11px;" width="100%">
        <thead>
            <tr>
                <th class="" rowspan="2" style="text-align:center;vertical-align:middle !important;">
                    No.
                </th>
                <th class="" rowspan="2" style="text-align:center;vertical-align:middle !important;">
                    Cost Center Code
                </th>
                <th class="" rowspan="2" style="text-align:center;vertical-align:middle !important;">
                    Keterangan Cost Center
                <th class="" rowspan="2" style="text-align:center;vertical-align:middle !important;">
                    Produk
                </th>
                @*<th class="" colspan="2" style="text-align:center;vertical-align:middle !important; ">
                    Kuantiti (per POKOK)
                </th>*@
                <th class="" rowspan="2" style="text-align:center;vertical-align:middle !important; ">
                    Jumlah Kuantiti
                </th>
                @*<th class="" colspan="2" style="text-align:center;vertical-align:middle !important; ">
                    Jumlah (RM)
                </th>*@
                <th class="" rowspan="2" style="text-align:center;vertical-align:middle !important; ">
                    Jumlah (RM)
                </th>
                <th class="" rowspan="2" style="text-align:center;vertical-align:middle !important; ">
                    Tahun Bajet
                </th>
                <th class="" rowspan="2" style="text-align:center;vertical-align:middle !important; ">
                    Action
                </th>
            </tr>
            @*<tr>
                <th class="" style="text-align:center;vertical-align:middle !important; ">
                    43003030
                    Jualan B/Tnmn
                </th>
                <th class="" style="text-align:center;vertical-align:middle !important; ">
                    43003031
                    Jualan B/Tnmn SK
                </th>
                <th class="" style="text-align:center;vertical-align:middle !important; ">
                    43003030
                    Jualan B/Tnmn
                </th>
                <th class="" style="text-align:center;vertical-align:middle !important;">
                    43003031
                    Jualan B/Tnmn SK
                </th>
            </tr>*@
        </thead>
        <tbody>
            @foreach (var item in Model.GroupBy(g => new { g.CostCenterCode, g.BudgetYear }).Select(s => s.FirstOrDefault()))
            {
                <tr>
                    <td style="text-align:center;vertical-align:middle !important;">
                        @i
                    </td>
                    <td style="text-align:center;vertical-align:middle !important;">
                        @Html.DisplayFor(modelItem => item.CostCenterCode)
                    </td>
                    <td style="text-align:center;vertical-align:middle !important;">
                        @Html.DisplayFor(modelItem => item.CostCenterDesc)
                    </td>
                    <td style="text-align:center;vertical-align:middle !important;">
                        @Html.DisplayFor(modelItem => item.JenisProduk)
                    </td>
                    @*<td style="text-align:center;vertical-align:middle !important;">
                        @(item.Quantity1.HasValue ? item.Quantity1.Value.ToString("#,##0.00"):"")
                    </td>
                    <td style="text-align:center;vertical-align:middle !important;">
                        @(item.Quantity2.HasValue ? item.Quantity2.Value.ToString("#,##0.00"):"")
                    </td>*@
                    <td style="text-align:center;vertical-align:middle !important;">
                        @(Model.Where(w => w.BudgetYear == item.BudgetYear && w.CostCenterCode == item.CostCenterCode).Sum(s=>s.AllQuantity).HasValue ?
                                Model.Where(w => w.BudgetYear == item.BudgetYear && w.CostCenterCode == item.CostCenterCode).Sum(s=>s.AllQuantity).Value.ToString("#,##0.000"):"")
                    </td>
                    @*<td style="text-align:center;vertical-align:middle !important;">
                        @(item.Amount1.HasValue ? item.Amount1.Value.ToString("#,##0.00"):"")
                    </td>
                    <td style="text-align:center;vertical-align:middle !important;">
                        @(item.Amount2.HasValue ? item.Amount2.Value.ToString("#,##0.00"):"")
                    </td>*@
                    <td style="text-align:center;vertical-align:middle !important;">
                        @(Model.Where(w => w.BudgetYear == item.BudgetYear && w.CostCenterCode == item.CostCenterCode).Sum(m=>m.AllAmount).HasValue ?
                            Model.Where(w => w.BudgetYear == item.BudgetYear && w.CostCenterCode == item.CostCenterCode).Sum(m => m.AllAmount).Value.ToString("#,##0.00") : "")
                    </td>
                    <td style="text-align:center;vertical-align:middle !important;">
                        @Html.DisplayFor(modelItem => item.BudgetYear)
                    </td>
                    <td width="100" style="text-align:center;vertical-align:middle !important;white-space:nowrap">
                        <a class="btn btn-primary btn-sm" data-modal1="" href=@Url.Action("Views", "PendapatanBijiBenih", new { costcenter = item.CostCenterCode, budgetyear = item.BudgetYear }) role="button" title="View" onclick="return DisplayProgressMessage2(this);"><i class='fa fa-list fa-sm'></i></a>
                        @if (bgtapproval.GetBlockStatus(item.CostCenterCode, item.BudgetYear, "I2") == true)
                        {
                            @*<a class="btn btn-success btn-sm" role="button" title="Update" disabled="disabled"><i class='fa fa-edit fa-sm'></i></a>
                            <a class="btn btn-danger btn-sm" role="button" title="Delete" disabled="disabled"><i class='fa fa-trash fa-sm'></i></a>*@
                        }
                        else 
                        {
                            if (!RoleScreen.edit && !RoleScreen.delete)
                            {
                                <a class="btn btn-success btn-sm" href=@Url.Action("Denied", "bgtAlert") role="button" title="Update"><i class='fa fa-edit fa-sm'></i></a> 
                                <a class="btn btn-danger btn-sm"  href=@Url.Action("Denied", "bgtAlert") role="button" title="Delete"><i class='fa fa-trash fa-sm'></i></a>
                            }
                            else if (RoleScreen.edit && !RoleScreen.delete)
                            {
                                <a class="btn btn-success btn-sm" data-modal1="" href=@Url.Action("Update", "PendapatanBijiBenih", new { costcenter = item.CostCenterCode, budgetyear = item.BudgetYear }) role="button" title="Update" onclick="return DisplayProgressMessage2(this);"><i class='fa fa-edit fa-sm'></i></a> 
                                <a class="btn btn-danger btn-sm"  href=@Url.Action("Denied", "bgtAlert") role="button" title="Delete"><i class='fa fa-trash fa-sm'></i></a>
                            }
                            else if (!RoleScreen.edit && RoleScreen.delete)
                            {
                                <a class="btn btn-success btn-sm" href=@Url.Action("Denied", "bgtAlert") role="button" title="Update"><i class='fa fa-edit fa-sm'></i></a> 
                                <a class="btn btn-danger btn-sm" data-modal1="" href=@Url.Action("Delete", "PendapatanBijiBenih", new { costcenter = item.CostCenterCode, budgetyear = item.BudgetYear }) role="button" title="Delete" onclick="return DisplayProgressMessage2(this);"><i class='fa fa-trash fa-sm'></i></a>
                            }
                            else
                            {
                                <a class="btn btn-success btn-sm" data-modal1="" href=@Url.Action("Update", "PendapatanBijiBenih", new { costcenter = item.CostCenterCode, budgetyear = item.BudgetYear }) role="button" title="Update" onclick="return DisplayProgressMessage2(this);"><i class='fa fa-edit fa-sm'></i></a> 
                                <a class="btn btn-danger btn-sm" data-modal1="" href=@Url.Action("Delete", "PendapatanBijiBenih", new { costcenter = item.CostCenterCode, budgetyear = item.BudgetYear }) role="button" title="Delete" onclick="return DisplayProgressMessage2(this);"><i class='fa fa-trash fa-sm'></i></a>
                            }
                        }
                    </td>
                </tr>
                i++;
            }
        </tbody>
    </table>
    <div class="row">
        <div class="col-md-6" hidden>
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
        @if (i >= 13)
        {
            <div class="col-md-12 text-center">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, YearFilter = ViewBag.YearFilter, CostCenterFilter = ViewBag.CostCenterFilter, BudgetYear = ViewBag.YearSelect, CostCenter = ViewBag.CostCenterSelect }))
            </div>
        }
    </div>
}
else
{
    <hr />
    <div class="text-center text-danger">
        @Html.Label(GlobalResEstate.msgErrorSearch)
    </div>
    <hr />
}